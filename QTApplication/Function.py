# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Function.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from threading import Thread
import mysql.connector
from Tools.DatabaseOperation import SQL
from PyQt5 import QtCore,  QtWidgets
from PyQt5.QtWidgets import  QTableWidgetItem
from GenerateRiskReport import GenerateRiskReport

class Ui_Dialog(QtWidgets.QDialog):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(800, 600)
        Dialog.setMinimumSize(QtCore.QSize(800, 600))
        Dialog.setMaximumSize(QtCore.QSize(800, 600))
        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setGeometry(QtCore.QRect(0, 0, 801, 601))
        self.tabWidget.setObjectName("tabWidget")
        self.tab_5 = QtWidgets.QWidget()
        self.tab_5.setObjectName("tab_5")
        self.label = QtWidgets.QLabel(self.tab_5)
        self.label.setGeometry(QtCore.QRect(20, 10, 130, 30))
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(self.tab_5)
        self.pushButton.setGeometry(QtCore.QRect(660, 40, 100, 30))
        self.pushButton.setObjectName("pushButton")
        self.lineEdit = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit.setGeometry(QtCore.QRect(20, 40, 130, 30))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = QtWidgets.QLineEdit(self.tab_5)
        self.lineEdit_2.setGeometry(QtCore.QRect(340, 40, 300, 30))
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.label_3 = QtWidgets.QLabel(self.tab_5)
        self.label_3.setGeometry(QtCore.QRect(340, 10, 150, 30))
        self.label_3.setObjectName("label_3")
        self.label_2 = QtWidgets.QLabel(self.tab_5)
        self.label_2.setGeometry(QtCore.QRect(170, 10, 150, 30))
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.tab_5)
        self.pushButton_2.setGeometry(QtCore.QRect(660, 90, 100, 30))
        self.pushButton_2.setObjectName("pushButton_2")
        self.tableWidget = QtWidgets.QTableWidget(self.tab_5)
        self.tableWidget.setGeometry(QtCore.QRect(20, 90, 620, 460))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(3)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        self.tableWidget.horizontalHeader().setStretchLastSection(True)
        self.comboBox = QtWidgets.QComboBox(self.tab_5)
        self.comboBox.setGeometry(QtCore.QRect(170, 40, 150, 32))
        self.comboBox.setStyleSheet("min-height:30px")
        self.comboBox.setIconSize(QtCore.QSize(30, 30))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.tabWidget.addTab(self.tab_5, "")
        self.tab_6 = QtWidgets.QWidget()
        self.tab_6.setObjectName("tab_6")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.tab_6)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(0, 40, 791, 311))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textBrowser = QtWidgets.QTextBrowser(self.verticalLayoutWidget)
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout.addWidget(self.textBrowser)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.tab_6)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(0, 0, 791, 41))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_2.addWidget(self.label_4)
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.tab_6)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(0, 390, 791, 61))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.pushButton_3 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.horizontalLayoutWidget)
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_3.addWidget(self.pushButton_4)
        self.tabWidget.addTab(self.tab_6, "")

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(0)
        self.pushButton.clicked.connect(self.add_function) # type: ignore
        self.pushButton_2.clicked.connect(self.machine_scan) # type: ignore
        self.pushButton_3.clicked.connect(self.report_view) # type: ignore
        self.pushButton_4.clicked.connect(self.report_generate) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "风险函数管理"))
        self.label.setText(_translate("Dialog", "函数名"))
        self.pushButton.setText(_translate("Dialog", "添加"))
        self.label_3.setText(_translate("Dialog", "建议解决方法"))
        self.label_2.setText(_translate("Dialog", "函数危险等级"))
        self.pushButton_2.setText(_translate("Dialog", "自动扫描"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "函数名"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "函数危险等级"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "建议解决方法"))
        self.comboBox.setItemText(0, _translate("Dialog", "低危险"))
        self.comboBox.setItemText(1, _translate("Dialog", "中等危险"))
        self.comboBox.setItemText(2, _translate("Dialog", "危险"))
        self.comboBox.setItemText(3, _translate("Dialog", "很危险（或稍小，取决于实现）"))
        self.comboBox.setItemText(4, _translate("Dialog", "很危险"))
        self.comboBox.setItemText(5, _translate("Dialog", "最危险"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_5), _translate("Dialog", "风险函数管理"))
        self.label_4.setText(_translate("Dialog", "报告预览"))
        self.pushButton_3.setText(_translate("Dialog", "报告预览"))
        self.pushButton_4.setText(_translate("Dialog", "报告生成"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_6), _translate("Dialog", "风险函数报告"))

    def add_function(self):
        fun_name = self.lineEdit.text()
        rank = self.comboBox.currentText()
        suggestation = self.lineEdit_2.text()
        row_count = self.tableWidget.rowCount()
        self.tableWidget.insertRow(row_count)
        self.tableWidget.setItem(row_count,0,QTableWidgetItem(fun_name))
        self.tableWidget.setItem(row_count,1,QTableWidgetItem(rank))
        self.tableWidget.setItem(row_count,2,QTableWidgetItem(suggestation))
        mysql = SQL()
        mysql.add_risk_function_manually(mysql.cursor,mysql.cnx, fun_name, rank,suggestation )
    def machine_scan(self):
        mysql = SQL()
        ss = mysql.select_scan_function(mysql.cursor)
        #print(ss)
        for result in ss:
            risk_id = result['risk']
            #print(risk_id)
            function_name = result['function']
            #function_text = result['function_text']
            result = mysql.risk_function_find(mysql.cursor,risk_id)
            #print(result)
            #print(len(result))
            re = list(result[0])
            row_count = self.tableWidget.rowCount()
            self.tableWidget.insertRow(row_count)
            self.tableWidget.setItem(row_count, 0, QTableWidgetItem(function_name))
            self.tableWidget.setItem(row_count, 1, QTableWidgetItem(re[2]))
            self.tableWidget.setItem(row_count, 2, QTableWidgetItem(re[1]+re[3]))


    def report_view(self):
        self.textBrowser.clear()
        self.result = GenerateRiskReport.report()
        self.textBrowser.setText(self.result)


    def report_generate(self):
        with open("report.txt","w",encoding="utf-8") as file_in:
            file_in.write(self.result)
